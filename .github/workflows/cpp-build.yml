# =================================================================================================
# GitHub Actions Workflow: Compilação do MicroSIP no Windows com Opus
#
# Este fluxo de trabalho automatiza a compilação do projeto MicroSIP para Windows (x64),
# incorporando as bibliotecas Opus pré-compiladas.
#
# Assume-se que o script 'scripts/download_opus_windows.ps1' está presente no repositório.
# =================================================================================================

name: Compilar MicroSIP no Windows (com Opus)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-microsip:
    name: Compilar MicroSIP no Windows
    runs-on: windows-latest

    steps:
      # Step 1: Checkout do repositório MicroSIP
      - name: Checkout do Repositório MicroSIP
        uses: actions/checkout@v4
        with:
          repository: sufficit/sufficit-microsip # Substitua se o repositório for diferente
          path: . # Checkout para a raiz do workspace
          submodules: recursive # Clona submodules, se houver

      # Step 2: Descarregar e preparar bibliotecas Opus usando o script existente
      - name: Descarregar e Preparar Bibliotecas Opus
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Necessário para autenticação na API do GitHub
        run: scripts/download_opus_windows.ps1 # Executa o script para descarregar Opus
        shell: pwsh

      # Step 3: Adicionar MSBuild ao PATH do ambiente
      - name: Adicionar MSBuild ao Path
        uses: microsoft/setup-msbuild@v2

      # Step 4: Compilar a solução MicroSIP
      # Ajuste o caminho do ficheiro de solução (.sln) conforme necessário para o seu projeto MicroSIP.
      # Exemplo: Se o ficheiro for 'MicroSIP/MicroSIP.sln' ou 'build/vs/microsip.sln'
      - name: Compilar Solução MicroSIP
        shell: pwsh
        run: |
          $microsipSlnPath = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath "MicroSIP.sln" # Exemplo: Ajuste para o caminho real da sua solução
          Write-Host "Compilando solução MicroSIP: $microsipSlnPath"
          # O comando msbuild.exe irá tentar compilar a solução.
          # Usamos /t:Build para compatibilidade com diferentes tipos de projeto.
          # O /m para multi-processamento pode acelerar a compilação.
          msbuild.exe "$microsipSlnPath" /p:Configuration=Release /p:Platform=x64 /m /t:Build
          if ($LASTEXITCODE -ne 0) {
              Write-Host "##[error]A compilação do MicroSIP falhou com o código de saída $LASTEXITCODE."
              exit 1
          }
          Write-Host "Compilação do MicroSIP concluída com sucesso."

      # Step 5: Opcional: Upload de artefatos da compilação do MicroSIP
      # Adapte os caminhos para os binários gerados pelo MicroSIP.
      - name: Upload de Binários do MicroSIP
        uses: actions/upload-artifact@v4
        with:
          name: microsip-windows-x64-binarios
          path: |
            bin/Release/*.exe # Exemplo: Ajuste para o caminho onde os executáveis do MicroSIP são gerados
            bin/Release/*.dll
            lib/*.lib # Incluir bibliotecas resultantes da compilação
            # Adicione outros arquivos importantes, se necessário
          retention-days: 7
