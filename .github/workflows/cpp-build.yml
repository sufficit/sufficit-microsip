name: Build C++ and Create Release

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.generate_version.outputs.VERSION }}

    steps:
    - name: 1. Checkout MicroSip Repository
      uses: actions/checkout@v4
      with:
        path: sufficit-microsip

    - name: 2. Clone PJSIP Repository
      uses: actions/checkout@v4
      with:
        repository: pjsip/pjproject
        path: pjproject

    - name: 3. Restructure PJSIP directories
      shell: pwsh
      run: |
        Move-Item -Path ${{ github.workspace }}\pjproject\* -Destination ${{ github.workspace }}\
        Remove-Item -Path ${{ github.workspace }}\pjproject -Recurse -Force

    # ===================== PASSO NOVO E FINAL =====================
    - name: 4. Create PJSIP config_site.h
      shell: pwsh
      run: |
        $config = @"
        #define PJ_WIN32 1
        #include <windows.h>
        #define PJ_HAS_IPV6 1
        #define PJSUA_MAX_ACC 10
        #define PJSUA_MAX_CALLS 32
        #define PJMEDIA_HAS_G729_CODEC 1
        #define PJMEDIA_HAS_ILBC_CODEC 1
        #define PJMEDIA_HAS_SPEEX_CODEC 1
        #define PJMEDIA_HAS_SPEEX_AEC 1
        #define PJMEDIA_HAS_OPUS_CODEC 1
        #define PJMEDIA_HAS_VIDEO 0
        #define PJMEDIA_VIDEO_DEV_HAS_SDL 0
        #define PJMEDIA_VIDEO_DEV_HAS_DSHOW 0
        #define PJ_LOG_MAX_LEVEL 3
        "@
        Set-Content -Path "${{ github.workspace }}\pjlib\include\pj\config_site.h" -Value $config
    # =============================================================

    - name: 5. Generate Version Tag
      id: generate_version
      working-directory: ./sufficit-microsip
      run: |
        $VERSION="v$(Get-Date -Format 'yyyy.MM.dd').${{ github.run_number }}"
        echo "VERSION=$VERSION" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

    - name: 6. Add MSBuild to path
      uses: microsoft/setup-msbuild@v2
      
    - name: 7. Build the project
      working-directory: ./sufficit-microsip
      run: msbuild.exe /p:Configuration=Release /p:Platform=x86 microsip.vcxproj

    - name: 8. Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: microsip-build
        path: sufficit-microsip/Release/microsip.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: 1. Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: microsip-build

    - name: 2. Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.build.outputs.version }}
        name: "Release ${{ needs.build.outputs.version }}"
        body: |
          Versão compilada automaticamente a partir do último push para a branch main.
        files: microsip.exe