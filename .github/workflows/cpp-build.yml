# =================================================================================================
# GITHUB ACTIONS WORKFLOW FOR BUILDING THE SUFFICIT/SUFFICIT-MICROSIP PROJECT
#
# WORKFLOW VERSION: 17 (Final - Absolute Paths)
#
# Author: Hugo Castro de Deco, Sufficit
# Collaboration: Gemini AI for Google
# Date: June 13, 2025
#
# == Logic and Execution Steps ==
#
# This workflow uses absolute paths via ${{ github.workspace }} for all file operations
# to eliminate any ambiguity and pathing errors. It relies on `config_site.h` and
# `patch.ps1` existing in the root of the 'sufficit-microsip' repository.
#
# 1.  **Checkout (Steps 1-3):** All sources are checked out into their respective folders.
# 2.  **Prepare & Patch (Step 4):**
#       a) Moves PJSIP sources to the workspace root.
#       b) Copies the user-provided `config_site.h` and `patch.ps1` to their required destinations
#          using explicit, absolute paths.
#       c) Executes the patch script to fix the broken PJSIP project file.
# 3.  **Build PJSIP (Step 6):** Builds the entire, now-corrected, PJSIP solution. No 'continue-on-error' needed.
# 4.  **Finalize (Steps 7-12):** Copies all necessary libraries and builds the final microsip.exe.
# =================================================================================================

name: Build C++ and Create Release

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.generate_version.outputs.VERSION }}

    steps:
    - name: 1. Checkout Main Repo with Scripts
      uses: actions/checkout@v4
      with:
        repository: sufficit/sufficit-microsip
        path: sufficit-microsip

    - name: 2. Clone PJSIP Repository
      uses: actions/checkout@v4
      with:
        repository: pjsip/pjproject
        path: pjproject
    
    - name: 3. Clone Opus into PJSIP third_party
      uses: actions/checkout@v4
      with:
        repository: xiph/opus
        path: pjproject/third_party/opus

    - name: 4. Prepare PJSIP Environment and Patch
      shell: pwsh
      run: |
        echo "Restructuring PJSIP directories..."
        Move-Item -Path "${{ github.workspace }}/pjproject/*" -Destination "${{ github.workspace }}/"
        Remove-Item -Path "${{ github.workspace }}/pjproject" -Recurse -Force

        echo "Copying config and patch files using absolute paths..."
        Copy-Item -Path "${{ github.workspace }}/sufficit-microsip/config_site.h" -Destination "${{ github.workspace }}/pjlib/include/pj/" -Force
        Copy-Item -Path "${{ github.workspace }}/sufficit-microsip/patch.ps1" -Destination "${{ github.workspace }}/" -Force
        
        echo "Executing patch script from workspace root..."
        cd ${{ github.workspace }}
        ./patch.ps1
        
    - name: 5. Add MSBuild to path
      uses: microsoft/setup-msbuild@v2

    - name: 6. Build Entire PJSIP Solution
      shell: pwsh
      run: |
        echo "Building the entire PJSIP solution (pjproject-vs14.sln)..."
        msbuild.exe pjproject-vs14.sln /p:Configuration=Release /p:Platform=Win32

    - name: 7. Prepare Libraries for Final Build
      shell: pwsh
      run: |
        echo "--- Preparing all required libraries for MicroSIP ---"
        $ws = "${{ github.workspace }}"
        $microsip_lib_dir = "$ws/sufficit-microsip/lib"
        $microsip_opus_dir = "$ws/sufficit-microsip/third_party/opus/Win32"
        New-Item -ItemType Directory -Force -Path $microsip_lib_dir
        New-Item -ItemType Directory -Force -Path $microsip_opus_dir
        
        $opus_source_file = Get-Item "$ws/third_party/lib/libopus-*.lib"
        Copy-Item -Path $opus_source_file.FullName -Destination "$microsip_opus_dir/opus.lib" -Force
        $opus_name = $opus_source_file.Name
        echo "Copied $opus_name to $microsip_opus_dir/opus.lib"

        $pjlib_source = Get-Item "$ws/lib/libpjproject-i386-Win32-vc14-Release.lib"
        $pjlib_expected_name = "libpjproject-i386-Win32-vc14-Release-Static.lib"
        $pjlib_dest_renamed = "$microsip_lib_dir/$pjlib_expected_name"
        Copy-Item -Path $pjlib_source.FullName -Destination $pjlib_dest_renamed -Force
        $pjlib_name = $pjlib_source.Name
        echo "Copied and Renamed $pjlib_name to $pjlib_dest_renamed"

    - name: 8. Generate Version Tag
      id: generate_version
      working-directory: ./sufficit-microsip
      run: |
        $VERSION="v$(Get-Date -Format 'yyyy.MM.dd').${{ github.run_number }}"
        echo "VERSION=$VERSION" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
      
    - name: 9. Build the final project
      working-directory: ./sufficit-microsip
      run: msbuild.exe /p:Configuration=Release /p:Platform=x86 microsip.vcxproj

    - name: 10. Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: microsip-build
        path: sufficit-microsip/Release/microsip.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: 1. Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: microsip-build

    - name: 2. Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.build.outputs.version }}
        name: "Release ${{ needs.build.outputs.version }}"
        body: |
          Versão compilada automaticamente a partir do último push para a branch main.
        files: microsip.exe